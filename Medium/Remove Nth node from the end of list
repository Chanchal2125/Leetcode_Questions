/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {

        int cnt = 0;
        ListNode* temp =  head;
        while(temp != NULL){
            cnt++;
            temp = temp -> next;
        }

        int del = cnt - n;
        ListNode* z = head;
        int check = 1;
        if(cnt == n) return head -> next;
        if(del == 0) return temp;
        while(check != del && z != NULL){
            z = z -> next;
            check++;
        }

        if(z != NULL && z -> next == NULL) return head;
        else if (z != NULL)
            z -> next = z -> next -> next;
           return head;
    }
};
